
#+TITLE:	Org Configuration
#+AUTHOR:	Jaxson Van Doorn
#+EMAIL:	jaxson.vandoorn@gmail.com
#+OPTIONS:  num:nil

* Plug-Ins
** Use Org ELPA
 #+BEGIN_SRC emacs-lisp
 (add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
 #+END_SRC
** Install Org Mode
 #+BEGIN_SRC emacs-lisp
 (use-package org
     :ensure org-plus-contrib)
 #+END_SRC

** Use Org Bullets
 #+BEGIN_SRC emacs-lisp
 (use-package org-bullets
     :ensure t)
 #+END_SRC

** Install Org Bootstrap Exporter
 #+BEGIN_SRC emacs-lisp
 ;(use-package ox-twbs
 ;    :ensure t)
 #+END_SRC
** Use Org Confluence
 #+BEGIN_SRC emacs-lisp
 (require 'ox-confluence)
 #+END_SRC
** Use Extra Org Exporters
 #+BEGIN_SRC emacs-lisp
 (require 'ox-extra)
 #+END_SRC
** Use Dot Org Babel
 #+BEGIN_SRC emacs-lisp
 (require 'ob-dot)
 #+END_SRC
** Use Org Ref
 #+BEGIN_SRC emacs-lisp
 (use-package org-ref
     :ensure t)
 #+END_SRC
* Behavior
** Show Agenda in Full Window
 #+BEGIN_SRC emacs-lisp
 (setq org-agenda-window-setup (quote current-window))
 #+END_SRC

** Insert New Line Before Each Entry
 #+BEGIN_SRC emacs-lisp
 (setq org-blank-before-new-entry (quote ((heading) (plain-list-item))))
 #+END_SRC

** Only Allow Item to Marked as Done When all Children are Done
 #+BEGIN_SRC emacs-lisp
 (setq org-enforce-todo-dependencies t)
 #+END_SRC

** Disable Source Block Auto-Indent
 #+BEGIN_SRC emacs-lisp
 (setq org-src-preserve-indentation t)
 #+END_SRC

** Set Org Agenda Folder
 #+BEGIN_SRC emacs-lisp
 (setq org-agenda-files '("~/Documents/JVD Docs/Todo/To Do.org"))
 #+END_SRC

** Change Org Ellipsis
 #+BEGIN_SRC emacs-lisp
 (setq org-ellipsis ".")
 #+END_SRC

** Set Todo Keywords
 #+BEGIN_SRC emacs-lisp
 (setq org-todo-keywords
     '((sequence "ARCADE" "UNFINISHED" "BEATEN" "COMPLETED"
                 "APPOINTMENT" "EXAM" "STUDY" "TODO"
                 "IN-PROGRESS" "NEAR-COMPLETION" "WAITING"
                 "REVIEW" "|" "DONE" "CANCELED")))

 (setq org-todo-keyword-faces
       '(
         ("ARCADE" . (:foreground "#9e94ff" :weight bold))
         ("UNFINISHED" . (:foreground "#ff7979" :weight bold))
         ("BEATEN" . (:foreground "#cbe3e7" :weight bold))
         ("COMPLETED" . (:foreground "#f4e27b" :weight bold))
         ("APPOINTMENT" . (:foreground "#caa36a" :weight bold))
         ("EXAM" . (:foreground "#fe94ff" :weight bold))
         ("STUDY" . (:foreground "#9e94ff" :weight bold))
         ("TODO" . (:foreground "#f4e27b" :weight bold))
         ("IN-PROGRESS" . (:foreground "#f7b75b" :weight bold))
         ("NEAR-COMPLETION" . (:foreground "#ff7979" :weight bold))
         ("WAITING" . (:foreground "#cbe3e7" :weight bold))
         ("REVIEW" . (:foreground "#95ffa1" :weight bold))
         ))
 #+END_SRC
** Timestamp on Task Completion
 #+BEGIN_SRC emacs-lisp
 (setq org-log-done (quote time))
 (setq org-log-redeadline (quote time))
 (setq org-log-reschedule (quote time))
 #+END_SRC
** Hide Indent Stars
 #+BEGIN_SRC emacs-lisp
 (setq org-hide-leading-stars t)
 #+END_SRC

** Make Tab Key Behave Normally in Source Blocks
 #+BEGIN_SRC emacs-lisp
 (setq org-src-tab-acts-natively t)
 #+END_SRC

** Disable Pop-Up Creation for Source Blocks
 #+BEGIN_SRC emacs-lisp
 (setq org-src-window-setup 'current-wndow)
 #+END_SRC
** Fontify Source Blocks
 #+BEGIN_SRC emacs-lisp
 (setq org-src-fontify-natively t)
 #+END_SRC
** Use XeLaTeX
 #+BEGIN_SRC emacs-lisp
 (setq org-latex-pdf-process
   '("xelatex -interaction nonstopmode -output-directory %o %f"
	 "bibtex %b"
	 "xelatex -interaction nonstopmode -output-directory %o %f"
	 "xelatex -interaction nonstopmode -output-directory %o %f"))
 #+END_SRC
** Support Ignore Tag
 #+BEGIN_SRC emacs-lisp
 (ox-extras-activate '(ignore-headlines))
 #+END_SRC
* Functions
** Mark as Done and Archive
 #+BEGIN_SRC emacs-lisp
 (defun org-mark-done-and-archive ()
     "Mark the state of an org-mode item as DONE and archive it."
     (interactive)
     (org-todo 'done)
     (org-archive-subtree))
 #+END_SRC
** Org Clock Status
#+BEGIN_SRC emacs-lisp
(defun org-clock-is-running ()
  (let ((drawer (org-clock-into-drawer))
    (clock (cons org-clock-marker org-clock-start-time)))
    (marker-buffer (car clock)))
)

(defun org-clock-status ()
  (if (org-clock-is-running)
    (org-clock-get-clock-string)
    (error "No clock running"))
)
#+END_SRC
* Mappings
** Org Link
 #+BEGIN_SRC emacs-lisp
 (define-key global-map "\C-cl" 'org-store-link)
 #+END_SRC

** Org Agenda
 #+BEGIN_SRC emacs-lisp
 (define-key global-map "\C-ca" 'org-agenda)
 #+END_SRC

** Org Archive and Mark as Done
 #+BEGIN_SRC emacs-lisp
 (define-key global-map "\C-cc" 'org-mark-done-and-archive)
 #+END_SRC

* Hooks
** Enable Bullet in Org
 #+BEGIN_SRC emacs-lisp
 (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
 #+END_SRC

** Line Wrapping
 #+BEGIN_SRC emacs-lisp
 (add-hook 'org-mode-hook #'(lambda ()
      (visual-line-mode)))
 #+END_SRC

* Provide init-org as a Package
#+BEGIN_SRC emacs-lisp
(provide 'init-org)
#+END_SRC
